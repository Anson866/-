# 上网配置 彦祖分享 免费上网
# ClashMeta 官方文档：https://clash-meta.wiki/
# ClashMeta 下载地址：https://github.com/MetaCubeX/ClashMetaForAndroid/releases

# 代理提供(订阅)组，添加/修改机场(名)请保证 proxy-providers 名称和 proxy-groups 同步添加/修改
# 免流用户使用订阅转换时建议开域名转IP来降低跳点
proxy-providers:
  免费节点:
    type: http
    path: ./ProxyProviders/免费节点.yaml
    url: "https://jihulab.com/Amyml/ikun/-/raw/main/free.txt"
    interval: 86400
    health-check: {enable: true, url: https://www.gstatic.com/generate_204, interval: 300}

  百度直连:
    type: http
    path: ./ProxyProviders/百度直连.yaml
    url: "https://jihulab.com/Amyml/ikun/-/raw/main/Daniel.yaml"
    interval: 86400
    health-check: {enable: true, url: https://www.gstatic.com/generate_204, interval: 300}

  机场1:
    type: http
    path: ./ProxyProviders/机场1.yaml
    url: "https://link.rapper.free.hr/?token=ikun&tag=cf"
    interval: 86400
    health-check: {enable: true, url: https://www.gstatic.com/generate_204, interval: 300}

  机场2:
    type: http
    path: ./ProxyProviders/机场2.yaml
    url: "订阅"
    interval: 86400
    health-check: {enable: true, url: https://www.gstatic.com/generate_204, interval: 300}

# HTTP(S) 和 SOCKS 代理混合端口
mixed-port: 7890
# redirect 透明代理端口，仅代理 TCP 流量
redir-port: 7891
# tproxy 透明代理端口，可以代理 TCP 以及 UDP 流量
tproxy-port: 1536
# 运行模式，rule 规则匹配 / global 全局代理(需要在GLOBAL策略组选择代理/策略) / direct 全局直连 此项拥有默认值，默认为规则模式
mode: rule
# 日志级别，silent：静默，不输出 / error：仅输出发生错误至无法使用的日志 / warning：输出发生错误但不影响运行的日志，以及 error 级别内容 / info：输出一般运行的内容，以及 error 和 warning 级别的日志 / debug：尽可能的输出运行中所有的信息
log-level: info
# 允许局域网，允许其他设备经过 Clash 的代理端口访问互联网
allow-lan: true
# 是否允许内核接受 IPv6 流量
ipv6: false
# GEO数据模式，更改 geoip 使用文件，mmdb 或者 dat，true 为 geoip.dat，此项有默认值 flase
geodata-mode: true
# 统一延迟，更换延迟计算方式,去除握手等额外延迟
unified-delay: true
# TCP连接并发，如果域名解析结果对应多个IP，并发所有IP，选择握手最快的 IP 进行连接
tcp-concurrent: true
# 外部控制 (API)，外部控制器，可以使用 RESTful API 来控制你的 Clash 内核
external-controller: 127.0.0.1:9090
# API 的访问密钥
secret: ""
# 外部用户界面，可以将静态网页资源（比如 Clash-dashboard) 运行在 Clash API, 路径为 API 地址/ui   可以为绝对路径，或者 Clash 工作目录的相对路径
external-ui: ./Dashboard
# 自定义外部用户界面下载地址
external-ui-url: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip" #从 GitHub Pages 分支获取

# 自动更新 GEO
geo-auto-update: false
# 更新间隔，单位小时
geo-update-interval: 24
# 自定 GEO 下载地址
geox-url:
  geoip: "https://mirror.ghproxy.com/https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geoip.dat"
  geosite: "https://mirror.ghproxy.com/https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geosite.dat"
  mmdb: "https://mirror.ghproxy.com/https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/country.mmdb"

# 在 Clash 官方中，profile 应为扩展配置，但在 Clash.meta, 仅作为缓存项使用
profile:
  # 储存 API 对策略组的选择，以供下次启动时使用。可选值为 true/false
  store-selected: true
  # 储存 fakeip 映射表（持久化fake-ip），域名再次发生连接时，使用原有映射地址。可选值为 true/false，
  store-fake-ip: false

#【Meta专属】域名嗅探器
sniffer:
  # 嗅探器开关
  enable: true
  # 嗅探协议对象：目前支持tls/http
  sniff:
    # TLS 默认如果不配置 ports，默认嗅探 443，全部端口为 0-65535
    TLS:
      ports: [443, 8443]
    # 需要嗅探的端口, 默认嗅探 80，全部端口为 0-65535
    HTTP:
      ports: [80, 8080-8880]
      # 是否使用嗅探结果作为实际访问，默认 true
      override-destination: true
  # 需要强制嗅探的域名，默认只对 IP 嗅探
  force-domain:
    - '+.v2ex.com'
  # 白名单，跳过嗅探结果
  skip-domain:
    - 'Mijia Cloud'
    - 'dlg.io.mi.com'

tun:
  # 是否启用 tun 模式来路由全局流量。可选：true/false
  enable: false
  # tun 模式堆栈，如无使用问题，建议使用 system 栈，MacOS 用户推荐 gvisor 栈，可选：system/gvisor/lwip
  stack: system
  # 自动设置全局路由，可以自动将全局流量路由进入 tun 网卡。可选：true/false
  auto-route: true
  # 自动选择流量出站接口，多出口网卡同时连接的设备建议手动指定出口网卡，可选：true/false
  auto-detect-interface: true
  # dns 劫持，一般设置为 any:53 即可, 即劫持所有 53 端口的 udp 流量
  dns-hijack:
    - 'any:53'
    - 'tcp://any:53'
  # 黑名单(填UID)
  exclude-uid:
   # - 10114

dns: 
  # 是否启用，如为 false，则使用系统 DNS 解析，可选值 true/false
  enable: true
  # 是否解析 IPV6, 如为 false, 则回应 AAAA 的空解析，可选值 true/false
  ipv6: false
  # dns 服务监听
  listen: 0.0.0.0:1053
  # Clash 的 dns 处理模式，可选值 fake-ip / redir-host
  enhanced-mode: fake-ip
  # fakeip 下的 IP 段设置，tun 网卡的默认 ip 也使用此值，格式为 ip/掩码（一般填 198.18.0.1/16 或 28.0.0.1/8）
  fake-ip-range: 28.0.0.1/8
  # fakeip 过滤，以下地址不会下发 fakeip 映射用于连接
  fake-ip-filter:
    - '*.lan'
  # 默认 dns, 用于解析 DNS 服务器 的域名。必须为 ip, 可为加密 dns
  default-nameserver:
    - 223.5.5.5
  # 代理节点域名解析服务器，仅用于解析代理节点的域名
  proxy-server-nameserver:
    - 'https://1.12.12.12/dns-query#百度直连'
  # 默认的域名解析服务器，如不配置 fallback/proxy-server-nameserver , 则所有域名都由 nameserver 解析
  nameserver:
    - 'tcp://1.1.1.1#国外代理'
    - 'tcp://8.8.8.8#国外代理'
    - 'tcp://208.67.222.222#国外代理'
  # 后备域名解析服务器，一般情况下使用境外 DNS, 保证结果可信，配置 fallback 后默认启用 fallback-filter，geoip-code 为 cn
  fallback:
    - 'https://223.5.5.5/dns-query#国内代理'
  # 后备域名解析服务器筛选，满足条件的将使用 fallback 结果或只使用 fallback 解析
  fallback-filter:
    # 是否启用 fallback filter。可选值为 true/false
    geoip: true
    # 可选值为国家缩写，默认值为 CN。除了 geoip-code 配置的国家 IP, 其他的 IP 结果会被视为污染。geoip-code 配置的国家的结果会直接采用，否则将采用 fallback 结果
    geoip-code: !CN
    # 可选值为对于的 geosite 内包含的集合，geosite 列表的内容被视为已污染，匹配到 geosite 的域名，将只使用 fallback 解析，不去使用 nameserver
    geosite:
      - CN

# 此处填节点，格式见 https://wiki.metacubex.one/config/proxies/vmess/
proxies:

# 代理(策略)组
proxy-groups:
  - name: "全球上网"
    # select(手动选择) 或 url-test(自动测速)
    type: select
    # 筛选关键词或正则表达式的节点，多个用|分隔
    filter: "公益|白嫖|中转|SG|JP|US|UK|HK|RF|CF|USA|ASIA|Netflix|香港|台湾|日本|韩国|美国|英国|德国|法国|荷兰|印度|越南|新加坡|加拿大|俄罗斯|乌克兰|华盛顿"
    # 排除关键词或正则表达式的节点，多个用|分隔
    exclude-filter: "ipv6"
    # 根据节点类型排除(不支持正则表达式)，多个用|分隔。节点类型：HTTP SOCKS Shadowsocks ShadowsocksR VMess VLESS Trojan Hysteria Hysteria2 TUIC WireGuard
    exclude-type: "Shadowsocks|ShadowsocksR|Trojan"
    proxies:
    use:
      - 机场1
      - 免费节点

  - name: "国内代理"
    type: select
    filter: "镇江|浙江|南京|北京|上海|广东|广州|苏州|杭州|福州|扬州|贵州|兰州|徐州|郑州|广西|河南|河北|重庆|南宁|宿迁|沈阳|四川|安徽|深圳|辽宁|济南|九江|长沙|昆明|武汉|陕西|西宁|芜湖|天津|南昌|成都|山西|太原|保定|湖南|百度"
    exclude-filter: "ipv6"
    proxies:
      - DIRECT
    use:
      - 百度直连    
      - 机场1

  - name: 国外代理
    type: relay
    proxies:
      - 国内代理
      - 全球上网               

  - name: "广告拦截"
    type: select
    proxies:
      - PASS
      - REJECT

# 分流规则提供(订阅)组
rule-providers:
  AD:
    type: http
    behavior: classical
    format: yaml
    path: ./RuleProviders/AD.yaml
    url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-clash.yaml"
    interval: 86400

# 分流规则
rules:
  # 通过订阅规则进行广告拦截
  - RULE-SET,AD,广告拦截
  # 屏蔽索尼服务
  - DOMAIN-SUFFIX,playstation.net,REJECT
  # 通过域名关键字拦截所有 pcdn mcdn p2p tracker stun 的 udp 流量
  - AND,((OR,(DOMAIN-KEYWORD,pcdn),(DOMAIN-KEYWORD,mcdn),(DOMAIN-KEYWORD,p2p),(DOMAIN-KEYWORD,tracker),(DOMAIN-KEYWORD,stun)),(NETWORK,UDP)),REJECT
  # 拦截所有 private ip 的 udp 流量
  - AND,((GEOIP,PRIVATE),(NETWORK,UDP)),REJECT
  # 通过包名和域名关键字拦截指定应用的 pcdn mcdn p2p tracker stun 流量
#  - AND,((OR,(PROCESS-NAME,tv.danmaku.bili),(PROCESS-NAME,com.bilibili.app.in),(PROCESS-NAME,com.duowan.kiwi),(PROCESS-NAME,air.tv.douyu.android)), (OR,(DOMAIN-KEYWORD,pcdn),(DOMAIN-KEYWORD,mcdn),(DOMAIN-KEYWORD,p2p),(DOMAIN-KEYWORD,tracker),(DOMAIN-KEYWORD,stun))),REJECT
  # 通过包名拦截指定应用的 private ip 流量
#  - AND,((OR,(PROCESS-NAME,tv.danmaku.bili),(PROCESS-NAME,com.bilibili.app.in),(PROCESS-NAME,com.duowan.kiwi),(PROCESS-NAME,air.tv.douyu.android)),(GEOIP,PRIVATE)),REJECT
  # 强制蓝奏云、123云盘、百度网盘上传、文叔叔下载、走国外（百度直连专用）
  - DOMAIN-SUFFIX,wwentua.com,国外代理
  - AND,((OR,(DOMAIN-SUFFIX,xn--ngstr-lra8j.com),(DOMAIN-KEYWORD,lanz),(DOMAIN-KEYWORD,wwentua),(DOMAIN-KEYWORD,123pan)), (OR,(DOMAIN-SUFFIX,update.pan.baidu.com),(DOMAIN-SUFFIX,down.wss.show))),国外代理
  # 通过包名放行指定应用的 udp 流量
  - AND,((OR,(PROCESS-NAME,com.tencent.tmgp.sgame),(PROCESS-NAME,com.tencent.tmgp.cf)),(DOMAIN-KEYWORD,tencent), (OR,(GEOSITE,CN),(GEOIP,CN)),(NETWORK,UDP)),DIRECT
  # 前置域名代理
  - AND,((OR,(DOMAIN-SUFFIX,xn--ngstr-lra8j.com),(DOMAIN-SUFFIX,googleapis.cn),(DOMAIN-SUFFIX,dev))),国外代理
  # 国内域名规则
  - AND,((OR,(GEOSITE,category-games@cn),(GEOSITE,microsoft@cn),(GEOSITE,steam@cn),(GEOSITE,apple@cn,),(GEOSITE,bytedance),(GEOSITE,CN))),国内代理
  # 国外域名规则
  - GEOSITE,geolocation-!cn,国外代理
  # private ip 直连
  - GEOIP,PRIVATE,DIRECT,no-resolve
  # 国内 ip 规则
  - GEOIP,CN,国内代理
  # 兜底规则
  - MATCH,国外代理
  # 防止 udp 侧漏
  - MATCH,REJECT
